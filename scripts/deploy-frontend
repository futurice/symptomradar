#!/bin/bash

if [ "$#" -ne 3 ]; then
  echo "Usage:"
  echo "  $ $(basename -- "$0") <env> <local-path> <remote-path>"
  echo "Examples:"
  echo "  $ $(basename -- "$0") dev   embed/v1     /embed/v1/"
  echo "  $ $(basename -- "$0") prod  main         /"
  exit 1
fi

set -euo pipefail # exit on error; treat unset variables as errors; exit on errors in piped commands
SELF_DIR="$(perl -e 'use File::Basename; use Cwd "abs_path"; print dirname(abs_path(@ARGV[0]));' -- "$0")" # figure out the absolute path to the current script, regardless of pwd (perl is more cross-platform than realpath; https://stackoverflow.com/a/30795461)
FRONTEND_DIR="$SELF_DIR/../frontend/$2"
DEFAULT_LANG="fi"

# Build the frontend static files
(
  cd "$FRONTEND_DIR"
  npm install
  INLINE_RUNTIME_CHUNK=false GENERATE_SOURCEMAP=false npm run build # don't inline webpack runtime (inline scripts are categorically banned by our CSP)
  if [ -f build/index.$DEFAULT_LANG.html ]; then # this build target uses pre-built translations
    npm run create-translations # create language-specific index files
    mv -v build/index{.$DEFAULT_LANG,}.html # replace the templated index HTML with the default-lang one
  fi
  rm -fv build/*manifest* build/service-worker.js # remove some CRA cruft we don't need
)

# Upload & clean up files that can be aggressively cached (i.e. for 1 day)
aws s3 cp \
  --cache-control=max-age=86400 \
  --recursive \
  $FRONTEND_DIR/build/static/ "s3://symptomradar-$1-frontend-code${3}static/"
rm -rfv "$FRONTEND_DIR/build/static"

# Upload & clean up files that need to be served fresh
aws s3 cp \
  --cache-control=max-age=15 \
  --recursive \
  $FRONTEND_DIR/build/ "s3://symptomradar-$1-frontend-code${3}"
rm -rfv "$FRONTEND_DIR/build"
